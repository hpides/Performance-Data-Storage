#
# WALT - A realistic load generator for web applications.
#
# Copyright 2020 Eric Ackermann <eric.ackermann@student.hpi.de>, Hendrik Bomhardt
# <hendrik.bomhardt@student.hpi.de>, Benito Buchheim
# <benito.buchheim@student.hpi.de>, Juergen Schlossbauer
# <juergen.schlossbauer@student.hpi.de>
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
apiVersion: apps/v1
kind: Deployment
metadata:
  name: pds-deployment
  labels:
    app: pds
spec:
  replicas: 1
  selector:
    matchLabels:
      app: pds
  template:
    metadata:
      labels:
        app: pds
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "6080"
    spec:
      containers:
        - name: pds
          image: localhost:5000/performancedatastorage:${tag}
          resources:
            requests:
              memory: "512Mi"
              cpu: "1"
            limits:
              memory: "512Mi"
              cpu: "1"
          env:
            - name: MYSQL_HOST
              value: db
            - name: JVM_OPTS
              value: "-XX:MaxRAM=512m -Xmx128m " #-XX:+UseSerialGC"
          ports:
            - containerPort: 6080
          imagePullPolicy: IfNotPresent
---
apiVersion: v1
kind: Service
metadata:
  name: performancedatastorage
spec:
  selector:
    app: pds
  ports:
    - protocol: TCP
      port: 80
      targetPort: 6080
      name: external
    - protocol: TCP
      port: 6080
      targetPort: 6080
      name: internal
---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: pds-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - http:
        paths:
          - path: /
            backend:
              serviceName: performancedatastorage
              servicePort: 80
      host: pds
